(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{496:function(t,s,e){"use strict";e.r(s);var u=e(42),a=Object(u.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"关于-nuxt-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于-nuxt-js"}},[t._v("#")]),t._v(" 关于 Nuxt.js")]),t._v(" "),e("p",[t._v("2016 年 10 月 25 日，zeit.co 背后的团队对外发布了 Next.js，一个 React 的服务端渲染应用框架。几小时后，与 Next.js 异曲同工，一个基于 Vue.js 的服务端渲染应用框架应运而生，我们称之为：Nuxt.js。")]),t._v(" "),e("h2",{attrs:{id:"nuxt-js-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nuxt-js-是什么"}},[t._v("#")]),t._v(" Nuxt.js 是什么？")]),t._v(" "),e("p",[t._v("Nuxt.js 是一个基于 Vue.js 的通用应用框架。")]),t._v(" "),e("p",[t._v("通过对客户端/服务端基础架构的抽象组织，Nuxt.js 主要关注的是应用的 UI 渲染。")]),t._v(" "),e("p",[t._v("我们的目标是创建一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有 Node.js 项目中使用 Nuxt.js。")]),t._v(" "),e("p",[t._v("Nuxt.js 预设了利用 Vue.js 开发服务端渲染的应用所需要的各种配置。")]),t._v(" "),e("p",[t._v("除此之外，我们还提供了一种命令叫：nuxt generate ，为基于 Vue.js 的应用提供生成对应的静态站点的功能。")]),t._v(" "),e("p",[t._v("我们相信这个命令所提供的功能，是向开发集成各种微服务（Microservices）的 Web 应用迈开的新一步。")]),t._v(" "),e("p",[t._v("作为框架，Nuxt.js 为 客户端/服务端 这种典型的应用架构模式提供了许多有用的特性，例如异步数据加载、中间件支持、布局支持等。")])])}),[],!1,null,null,null);s.default=a.exports}}]);