(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{413:function(n,t,r){"use strict";r.r(t);var a=r(42),o=Object(a.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"耗性能操作和时间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#耗性能操作和时间复杂度"}},[n._v("#")]),n._v(" 耗性能操作和时间复杂度")]),n._v(" "),r("h2",{attrs:{id:"时间复杂度-o-log-n-意味着什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度-o-log-n-意味着什么"}},[n._v("#")]),n._v(" 时间复杂度 O(log n) 意味着什么？")]),n._v(" "),r("p",[n._v("预先知道算法的复杂度是一回事，了解其后的原理是另一件事情。"),r("br"),r("br"),n._v("\n不管你是计算机科班出身还是想有效姐姐最优化问题，如果想要用自己的知识解决实际问题，他都必须理解时间复杂度。"),r("br"),r("br"),n._v("\n先从简单直观的 O(1) 和 O(n) 复杂度说起。O(1) 表示一次操作即可直接取得目标元素（比如字典或哈希表），O(n) 意味着先要检查 n 个元素来搜素目标，但是 O(log n) 是什么意思呢？"),r("br"),r("br"),n._v("\n你第一次听说 O(log n) 时间复杂度可能是在学二分搜素算法的时候。二分搜素一定有某种行为使其时间复杂度为 log n。我们来看看是二分搜素是如何实现的。"),r("br"),r("br"),n._v("\n因为在最好情况下二分搜素的时间复杂度是 O(1),最坏情况（平均情况）下 O(log n),我们直接来看最坏情况下的例子。已知有16个元素的有序数组。"),r("br"),r("br"),n._v("\n举个最坏情况的例子，比如我们要找的是数字 13。")])])}),[],!1,null,null,null);t.default=o.exports}}]);