(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{428:function(t,s,a){"use strict";a.r(s);var e=a(42),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sessionstorage-存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage-存储"}},[t._v("#")]),t._v(" sessionStorage 存储")]),t._v(" "),a("h2",{attrs:{id:"浏览器存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" 浏览器存储")]),t._v(" "),a("p",[t._v("Cookie,SessionStorage,LocalStorage 这三者都可以被用来在浏览器端存储数据，而且都是字符串类型的键值对！"),a("br"),a("br"),t._v("\n注意：session 和 SessionStorage 不是一个概念！！！在服务端有 一种存储方式叫做：session 会话存储，常常被简称 session。"),a("br"),a("br"),t._v("\nsession：会话。"),a("br"),t._v("\nSessionStorage：浏览器端用于存储数据的容器。"),a("br"),t._v("\nsession 会话存储：服务端一种存储数据的方式，常常被简称为 session。")]),t._v(" "),a("h2",{attrs:{id:"web-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-storage"}},[t._v("#")]),t._v(" Web Storage")]),t._v(" "),a("p",[t._v("SessionStorage 和 LocalStorage 都是浏览器本地存储，统称为 Web Stroage，存储内容大小一般支持 5-10MB，浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。"),a("br"),a("br"),t._v("\n相关 API：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("xxxxStorage.setItem('key','value');该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新其对应的值。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("var data = xxxxStorage.getItem('key');该方法接受一个键名作为参数，返回键名对应的值。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("xxxxStorage.removeItem('key');该方法接受一个键名作为参数，并把该键名从存储中删除。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("xxxxStorage.clear();调用该方法会清空存储中的所有键名")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("SessionStorage 存储的内容会随着浏览器窗口关闭而消失。"),a("br"),t._v("\nLocalStorage 存储的内容，需要手动清除才会消失。")])]),t._v(" "),a("h2",{attrs:{id:"storage-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-事件"}},[t._v("#")]),t._v(" storage 事件：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("Storage 对象发生变化时触发（即创建/更新/删除数据项时，Storage.clear() 只会触发一次）。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("在同一个页面内发生的改变不会起作用。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("在相同域名下的其他页面发生的改变才会起作用。（修改的页面不会触发事件，与它共享的页面会触发事件）。")])]),t._v(" "),a("ul",[a("li",[t._v("key：修改或删除的 key 值，如果调用 clear(),为 null。")]),t._v(" "),a("li",[t._v("newValue：新设置的值，如果调用 clear(),为 null。")]),t._v(" "),a("li",[t._v("oldValue：调用改变前的 value 值，如果调用 clear(),为 null。")]),t._v(" "),a("li",[t._v("url：触发该脚本变化的文档的 url。")]),t._v(" "),a("li",[t._v("storageArea：当前的 storage 对象。")])])])]),t._v(" "),a("p",[t._v("使用方法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"storage"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处编写业务代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);